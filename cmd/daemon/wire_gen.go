// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"github.com/polyse/web-scraper/internal/app"
	"github.com/polyse/web-scraper/internal/connection"
	"github.com/polyse/web-scraper/internal/module"
)

// Injectors from wire.go:

func initApp() (*app.App, func(), error) {
	mainConfig, err := newConfig()
	if err != nil {
		return nil, nil, err
	}
	connection, cleanup, err := initConnection(mainConfig)
	if err != nil {
		return nil, nil, err
	}
	module, err := initModule(mainConfig, connection)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	appApp, err := app.NewApp(module)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	return appApp, func() {
		cleanup()
	}, nil
}

// wire.go:

func initModule(cfg *config, conn *connection.Connection) (*module.Module, error) {
	return module.NewModule(cfg.FilePath, cfg.OutputPath, conn)
}

func initConnection(cfg *config) (*connection.Connection, func(), error) {
	c, err := connection.New(cfg.Listen)
	return c, func() {
		c.Close()
	}, err
}
